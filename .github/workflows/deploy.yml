name: Deploy MDA App

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (solo para contexto de Buildx)
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          registry: docker.io

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: drex422/mda:latest
          cache-from: type=registry,ref=drex422/mda:buildcache
          cache-to: type=registry,ref=drex422/mda:buildcache,mode=max

      - name: Add server to known_hosts to avoid SSH prompt
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p 5356 ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 5356
          debug: true
          script: |
            echo "Haciendo pull del código..."
            cd ~/mda
            git reset --hard
            git clean -fd
            git pull origin main

            echo "Verificando Docker Compose..."
            if ! command -v docker-compose &> /dev/null; then
              echo "Instalando Docker Compose..."
              curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
              ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
            fi

            echo "Parando contenedores..."
            docker-compose down --remove-orphans --volumes --timeout 30 || true

            echo "Levantando nuevo contenedor..."
            docker-compose up -d --build --force-recreate --remove-orphans

            echo "Verificando que esté corriendo..."
            docker ps | grep mda-app || echo "mda-app no se está ejecutando."

            echo "Puerto 5173 en uso:"
            netstat -tulpn | grep :5173 || true
